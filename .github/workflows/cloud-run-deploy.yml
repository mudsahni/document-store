name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main  # or your default branch
  workflow_dispatch:  # Allows manual triggering

env:
  PROJECT_ID: muditsahni-bb2eb # Replace with your GCP Project ID
  SERVICE_NAME: documentstore # Replace with your Cloud Run service name
  REGION: asia-south2-a # Replace with your desired region

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: 'gke-gcloud-auth-plugin'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Get Firebase Credentials
        run: |
          gcloud secrets versions access latest --project="${{ env.PROJECT_ID }}" --secret="firebase-sa-key" > firebase-sa-key.json

      - name: Get GCP Service Account Key
        run: |
          gcloud secrets versions access latest --project="${{ env.PROJECT_ID }}" --secret="gcp-sa-key" > gcp-sa-key.json

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build
        env:
          GCP_SA_KEY: gcp-sa-key.json
          FIREBASE_SA_KEY: firebase-sa-key.json

      - name: Configure Docker for Google Container Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev gcr.io
          REPO_NAME="gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}"
          gcloud container images list --repository=$REPO_NAME || \
          echo "Repository doesn't exist yet, it will be created on first push"

      - name: Build and Push Docker image
        run: |
          FIREBASE_SA_KEY=$(cat firebase-sa-key.json)
          GCP_SA_KEY=$(cat gcp-sa-key.json)
          docker build --build-arg FIREBASE_SA_KEY="$FIREBASE_SA_KEY" \
          --build-arg GCP_SA_KEY="$GCP_SA_KEY" -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE_NAME }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          secrets: |
            FIREBASE_SA_KEY=projects/${{ env.PROJECT_ID }}/secrets/${{ secrets.FIREBASE_SA_KEY }}/versions/latest
            GCP_SA_KEY=projects/${{ env.PROJECT_ID }}/secrets/${{ secrets.GCP_SA_KEY }}/versions/latest
